{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name re-posh.events, :imports nil, :requires {r re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses nil, :defs {reg-event-ds {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/re_posh/events.cljc", :line 4, :column 7, :end-line 4, :end-column 19, :arglists (quote ([event-name interceptors handler] [event-name handler])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([event-name interceptors handler] [event-name handler]), :arglists ([event-name interceptors handler] [event-name handler]), :arglists-meta (nil nil)}}, :name re-posh.events/reg-event-ds, :variadic false, :file "resources/public/js/compiled/out/re_posh/events.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([event-name interceptors handler] [event-name handler]), :arglists ([event-name interceptors handler] [event-name handler]), :arglists-meta (nil nil)}, :method-params ([event-name interceptors handler] [event-name handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 3, :fn-var true, :arglists ([event-name interceptors handler] [event-name handler])}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:ds :transact}, :order [:ds :transact]}, :doc nil}