{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name bidi-tools.core, :imports nil, :requires {string clojure.string, clojure.string clojure.string, cemerick.url cemerick.url, bidi bidi.bidi, bidi.bidi bidi.bidi, walk clojure.walk, clojure.walk clojure.walk, s schema.core, schema.core schema.core}, :cljs.spec/speced-vars [], :uses {url-decode cemerick.url, url-encode cemerick.url}, :defs {get-query-params {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 85, :column 7, :end-line 85, :end-column 23, :arglists (quote ([route path params]))}, :name bidi-tools.core/get-query-params, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 23, :method-params ([route path params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 3, :fn-var true, :arglists (quote ([route path params]))}, get-handlers {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 134, :column 7, :end-line 134, :end-column 19, :arglists (quote ([routes]))}, :name bidi-tools.core/get-handlers, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 19, :method-params ([routes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([routes]))}, default-query-params-schema {:name bidi-tools.core/default-query-params-schema, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :line 8, :column 1, :end-line 8, :end-column 43, :private true, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 8, :column 16, :end-line 8, :end-column 43, :private true}, :tag cljs.core/IMap}, IBidiIdentity {:meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 104, :column 14, :end-line 104, :end-column 27, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {bidi-identity [[this]]}}}, :protocol-symbol true, :name bidi-tools.core/IBidiIdentity, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 27, :column 1, :line 104, :protocol-info {:methods {bidi-identity [[this]]}}, :info nil, :end-line 104, :tag any, :impls #{default function}, :doc nil, :jsdoc ("@interface")}, path-with-query-for {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 90, :column 7, :end-line 90, :end-column 26, :arglists (quote ([route handler query-params-schema & {:as all-params}])), :doc "Like path-for, but extra parameters will be appended to the url as query parameters\n  rather than silently ignored", :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(route handler query-params-schema {:as all-params})], :arglists ([route handler query-params-schema & {:as all-params}]), :arglists-meta (nil)}}, :name bidi-tools.core/path-with-query-for, :variadic true, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 26, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(route handler query-params-schema {:as all-params})], :arglists ([route handler query-params-schema & {:as all-params}]), :arglists-meta (nil)}, :method-params [(route handler query-params-schema {:as all-params})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 3, :fn-var true, :arglists ([route handler query-params-schema & {:as all-params}]), :doc "Like path-for, but extra parameters will be appended to the url as query parameters\n  rather than silently ignored"}, query-param {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 16, :column 7, :end-line 16, :end-column 18, :arglists (quote ([schema reader writer]))}, :name bidi-tools.core/query-param, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 18, :method-params ([schema reader writer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 3, :fn-var true, :arglists (quote ([schema reader writer]))}, encode-param {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 60, :column 8, :end-line 60, :end-column 20, :private true, :arglists (quote ([[k v]]))}, :private true, :name bidi-tools.core/encode-param, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 20, :method-params ([p__45541]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[k v]]))}, map->query-string {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 67, :column 8, :end-line 67, :end-column 25, :private true, :arglists (quote ([params]))}, :private true, :name bidi-tools.core/map->query-string, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 25, :method-params ([params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([params]))}, read-query-params {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 35, :column 7, :end-line 35, :end-column 24, :arglists (quote ([params schema]))}, :name bidi-tools.core/read-query-params, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 24, :method-params ([params schema]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([params schema]))}, form-encode {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 58, :column 4, :end-line 58, :end-column 15, :protocol bidi-tools.core/FormEncodeable, :doc nil, :arglists (quote ([x]))}, :protocol bidi-tools.core/FormEncodeable, :name bidi-tools.core/form-encode, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc nil}, pr-routes {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 123, :column 7, :end-line 123, :end-column 16, :arglists (quote ([routes]))}, :name bidi-tools.core/pr-routes, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 16, :method-params ([routes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 1, :fn-var true, :arglists (quote ([routes]))}, bidi-identity {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 105, :column 4, :end-line 105, :end-column 17, :protocol bidi-tools.core/IBidiIdentity, :doc nil, :arglists (quote ([this]))}, :protocol bidi-tools.core/IBidiIdentity, :name bidi-tools.core/bidi-identity, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, get-handler {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 125, :column 8, :end-line 125, :end-column 19, :private true, :arglists (quote ([route]))}, :private true, :name bidi-tools.core/get-handler, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 19, :method-params ([route]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([route]))}, query-string->params {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 39, :column 7, :end-line 39, :end-column 27, :arglists (quote ([q] [q schema])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([q] [q schema]), :arglists ([q] [q schema]), :arglists-meta (nil nil)}}, :name bidi-tools.core/query-string->params, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([q] [q schema]), :arglists ([q] [q schema]), :arglists-meta (nil nil)}, :method-params ([q] [q schema]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists ([q] [q schema])}, map->QueryParam {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 11, :column 12, :end-line 11, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__45506]))}, :name bidi-tools.core/map->QueryParam, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 22, :method-params ([G__45506]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__45506]))}, build-query-string {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 62, :column 8, :end-line 62, :end-column 26, :private true, :arglists (quote ([[k v]]))}, :private true, :name bidi-tools.core/build-query-string, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 26, :method-params ([p__45546]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[k v]]))}, QueryParam {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection schema.core/Schema cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name bidi-tools.core/QueryParam, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 22, :type true, :column 12, :internal-ctor true, :line 11, :record true, :end-line 11, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, read-query-param {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 29, :column 8, :end-line 29, :end-column 24, :private true, :arglists (quote ([schema [k v]]))}, :private true, :name bidi-tools.core/read-query-param, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 24, :method-params ([schema p__45517]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([schema [k v]]))}, ->QueryParam {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 11, :column 12, :end-line 11, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([schema reader writer]))}, :name bidi-tools.core/->QueryParam, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 22, :method-params ([schema reader writer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 11, :end-line 11, :max-fixed-arity 3, :fn-var true, :arglists (quote ([schema reader writer]))}, FormEncodeable {:meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 57, :column 14, :end-line 57, :end-column 28, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {form-encode [[x]]}}}, :protocol-symbol true, :name bidi-tools.core/FormEncodeable, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 28, :column 1, :line 57, :protocol-info {:methods {form-encode [[x]]}}, :info nil, :end-line 57, :tag any, :impls #{cljs/core.Keyword cljs/core.PersistentArrayMap default cljs/core.PersistentTreeMap string}, :doc nil, :jsdoc ("@interface")}, match-route-with-query {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 48, :column 7, :end-line 48, :end-column 29, :arglists (quote ([routes path & {:keys [query-params-schema]}])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(routes path {:keys [query-params-schema]})], :arglists ([routes path & {:keys [query-params-schema]}]), :arglists-meta (nil)}}, :name bidi-tools.core/match-route-with-query, :variadic true, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 29, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(routes path {:keys [query-params-schema]})], :arglists ([routes path & {:keys [query-params-schema]}]), :arglists-meta (nil)}, :method-params [(routes path {:keys [query-params-schema]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 2, :fn-var true, :arglists ([routes path & {:keys [query-params-schema]}])}, write-query-param {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 19, :column 8, :end-line 19, :end-column 25, :private true, :arglists (quote ([schema [k v]]))}, :private true, :name bidi-tools.core/write-query-param, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 25, :method-params ([schema p__45512]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([schema [k v]]))}, url-for {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 98, :column 7, :end-line 98, :end-column 14, :arglists (quote ([routes handler params] [routes handler params query-params-schema])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([routes handler params] [routes handler params query-params-schema]), :arglists ([routes handler params] [routes handler params query-params-schema]), :arglists-meta (nil nil)}}, :name bidi-tools.core/url-for, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([routes handler params] [routes handler params query-params-schema]), :arglists ([routes handler params] [routes handler params query-params-schema]), :arglists-meta (nil nil)}, :method-params ([routes handler params] [routes handler params query-params-schema]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 4, :fn-var true, :arglists ([routes handler params] [routes handler params query-params-schema])}, write-query-params {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/bidi_tools/core.cljc", :line 25, :column 7, :end-line 25, :end-column 25, :arglists (quote ([params schema]))}, :name bidi-tools.core/write-query-params, :variadic false, :file "resources/public/js/compiled/out/bidi_tools/core.cljc", :end-column 25, :method-params ([params schema]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([params schema]))}}, :cljs.spec/registry-ref [], :require-macros {s schema.core, schema.core schema.core}, :cljs.analyzer/constants {:seen #{uuid :schema :query-params-schema schema long :route-params :writer :reader :query-params keyword writer reader}, :order [:schema :reader :writer schema reader writer :query-params-schema :query-params :route-params keyword long uuid]}, :doc nil}