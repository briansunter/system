{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name todomvc.views.navigation, :imports nil, :requires {cljsjs.material-ui cljsjs.material-ui, reagent.core reagent.core, r reagent.core, ic cljs-react-material-ui.icons, s cljs.spec.alpha, cljs-react-material-ui.reagent cljs-react-material-ui.reagent, todomvc.routes todomvc.routes, ui cljs-react-material-ui.reagent, cljs-react-material-ui.core cljs-react-material-ui.core, cljs-react-material-ui.icons cljs-react-material-ui.icons, cljs.spec.alpha cljs.spec.alpha, re-frame re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [todomvc.views.navigation/main-app-bar], :uses {get-mui-theme cljs-react-material-ui.core, color cljs-react-material-ui.core, path-for-page todomvc.routes}, :defs {main-app-drawer {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/navigation.cljs", :line 12, :column 7, :end-line 12, :end-column 22, :arglists (quote ([]))}, :name todomvc.views.navigation/main-app-drawer, :variadic false, :file "src/cljs/navigation.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, toggle-app-drawer-button {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/navigation.cljs", :line 34, :column 7, :end-line 34, :end-column 31, :arglists (quote ([]))}, :name todomvc.views.navigation/toggle-app-drawer-button, :variadic false, :file "src/cljs/navigation.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-card-button {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/navigation.cljs", :line 41, :column 7, :end-line 41, :end-column 22, :arglists (quote ([]))}, :name todomvc.views.navigation/add-card-button, :variadic false, :file "src/cljs/navigation.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, app-bar-close-button {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/navigation.cljs", :line 52, :column 7, :end-line 52, :end-column 27, :arglists (quote ([props]))}, :name todomvc.views.navigation/app-bar-close-button, :variadic false, :file "src/cljs/navigation.cljs", :end-column 27, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props]))}, app-bar-menu-button {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/navigation.cljs", :line 56, :column 7, :end-line 56, :end-column 26, :arglists (quote ([]))}, :name todomvc.views.navigation/app-bar-menu-button, :variadic false, :file "src/cljs/navigation.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, left-app-bar-button-for-page {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/navigation.cljs", :line 61, :column 7, :end-line 61, :end-column 35, :arglists (quote ([page]))}, :name todomvc.views.navigation/left-app-bar-button-for-page, :variadic false, :file "src/cljs/navigation.cljs", :end-column 35, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, main-app-bar {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/navigation.cljs", :line 95, :column 7, :end-line 95, :end-column 19, :arglists (quote ([props]))}, :name todomvc.views.navigation/main-app-bar, :variadic false, :file "src/cljs/navigation.cljs", :end-column 19, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props]))}, theme {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/navigation.cljs", :line 107, :column 7, :end-line 107, :end-column 12, :arglists (quote ([content]))}, :name todomvc.views.navigation/theme, :variadic false, :file "src/cljs/navigation.cljs", :end-column 12, :method-params ([content]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([content]))}}, :cljs.spec/registry-ref [[:todomvc.views.navigation/hiccup :todomvc.views.navigation/elem] [:todomvc.views.navigation/draggable cljs.core/true?] [:todomvc.views.navigation/props-elem (cljs.spec.alpha/cat :type :todomvc.views.navigation/elem-type :props cljs.core/map? :elem cljs.core/string?)] [:todomvc.views.navigation/rotate cljs.core/pos-int?] [todomvc.views.navigation/main-app-bar (cljs.spec.alpha/fspec :args :todomvc.views.navigation/app-bar-props)] [:todomvc.views.navigation/x cljs.core/pos-int?] [:todomvc.views.navigation/right-element :todomvc.views.navigation/hiccup] [:todomvc.views.navigation/left-element :todomvc.views.navigation/hiccup] [:todomvc.views.navigation/font-size (cljs.spec.alpha/and cljs.core/pos-int? (fn* [] (cljs.core/< 0 20)))] [:todomvc.views.navigation/app-bar-props (cljs.spec.alpha/keys :req [:todomvc.views.navigation/title :todomvc.views.navigation/left-element :todomvc.views.navigation/right-element])] [:todomvc.views.navigation/elem-type #{:div :href :a}] [:todomvc.views.navigation/color #{"blue" "magenta" "green" "red" "lavender"}] [:todomvc.views.navigation/title cljs.core/string?] [:todomvc.views.navigation/style (cljs.spec.alpha/keys :req-un [:todomvc.views.navigation/color :todomvc.views.navigation/font-size])] [:todomvc.views.navigation/elem (cljs.spec.alpha/with-gen (cljs.spec.alpha/cat :type #{:a} :props (cljs.spec.alpha/? (cljs.spec.alpha/keys :req-un [:todomvc.views.navigation/style])) :elem cljs.core/vector?) (fn* [] (gen/return [:a "test"])))]], :require-macros {s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha, ic cljs-react-material-ui.icons, cljs-react-material-ui.icons cljs-react-material-ui.icons, r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:args :todomvc.views.navigation/hiccup :req-un :opt-un :open :primary-text :todomvc.views.navigation/draggable cljs.core/< cljs.core/pos-int? :gfn :pred-exprs :keys-pred :feed :todomvc.views.navigation/props-elem cljs.core/vector? :opt-keys :color :on-request-change :disabled :add-card-button-enabled :else :font-size cljs.spec.alpha/and :app-drawer-open :top cljs.spec.alpha/cat :icon-element-right :add-card-back-text :decks :todomvc.views.navigation/rotate cljs.core/string? :toggle-nav-drawer :add-card :fill :palette :req-specs :mui-theme :text-color :margin-top :z-depth cljs.spec.alpha/fspec :type todomvc.views.navigation/main-app-bar cljs.core/contains? cljs.core/map? % :on-click :title :todomvc.views.navigation/x :style cljs.core/true? :div cljs.spec.alpha/keys :elem :set-nav-drawer-open :add-deck :req :todomvc.views.navigation/right-element :docked fn* :label :todomvc.views.navigation/left-element :todomvc.views.navigation/font-size cljs.spec.alpha/with-gen :green600 :todomvc.views.navigation/app-bar-props :left-icon :req-keys :add-card/create-card :cards cljs.core/fn :opt-specs :todomvc.views.navigation/elem-type :todomvc.views.navigation/color :position :pred-forms :add-card-front-text :icon-element-left :todomvc.views.navigation/title :todomvc.views.navigation/style :href :todomvc.views.navigation/elem cljs.core/any? :a gen/return :left :opt :props cljs.spec.alpha/?}, :order [:app-drawer-open :open :docked :z-depth :on-request-change :set-nav-drawer-open :primary-text :href :left-icon :feed :decks :on-click :toggle-nav-drawer :style :color :add-card-button-enabled :add-card-front-text :add-card-back-text :label :disabled :add-card/create-card :margin-top :fill :add-deck :add-card :cards :else :todomvc.views.navigation/title cljs.core/string? :todomvc.views.navigation/elem-type :div :a :todomvc.views.navigation/props-elem cljs.spec.alpha/cat :type :props cljs.core/map? :elem :todomvc.views.navigation/color :todomvc.views.navigation/font-size cljs.spec.alpha/and cljs.core/pos-int? fn* cljs.core/< cljs.core/fn % :todomvc.views.navigation/draggable cljs.core/true? :todomvc.views.navigation/rotate :todomvc.views.navigation/x :todomvc.views.navigation/style cljs.spec.alpha/keys :req-un :opt-un :gfn :pred-exprs :keys-pred :opt-keys :req-specs :req :req-keys :opt-specs :pred-forms :opt :font-size cljs.core/contains? :todomvc.views.navigation/elem cljs.spec.alpha/with-gen cljs.spec.alpha/? cljs.core/vector? gen/return :todomvc.views.navigation/hiccup :todomvc.views.navigation/left-element :todomvc.views.navigation/right-element :todomvc.views.navigation/app-bar-props todomvc.views.navigation/main-app-bar cljs.spec.alpha/fspec :args cljs.core/any? :title :icon-element-left :icon-element-right :position :top :left :mui-theme :palette :text-color :green600]}, :doc nil}