{:rename-macros {}, :renames {}, :externs {document {getElementById {}}}, :use-macros {}, :excludes #{}, :name todomvc.core, :imports nil, :requires {reagent reagent.core, todomvc.views todomvc.views, todomvc.events todomvc.events, views todomvc.views, reagent.core reagent.core, todomvc.config todomvc.config, routes todomvc.routes, todomvc.subs todomvc.subs, config todomvc.config, todomvc.routes todomvc.routes, re-frame re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses nil, :defs {dev-setup {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/core.cljs", :line 11, :column 7, :end-line 11, :end-column 16, :arglists (quote ([]))}, :name todomvc.core/dev-setup, :variadic false, :file "src/cljs/todomvc/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mount-root {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/core.cljs", :line 16, :column 7, :end-line 16, :end-column 17, :arglists (quote ([]))}, :name todomvc.core/mount-root, :variadic false, :file "src/cljs/todomvc/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/core.cljs", :line 21, :column 16, :end-line 21, :end-column 20, :export true, :arglists (quote ([]))}, :name todomvc.core/init, :variadic false, :file "src/cljs/todomvc/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:initialize-db}, :order [:initialize-db]}, :doc nil}