{:rename-macros {}, :renames {}, :externs {MaterialUIChipInput {}}, :use-macros {}, :excludes #{}, :name todomvc.scenes.add-action, :imports nil, :requires {todomvc.navigation todomvc.navigation, nav todomvc.navigation, cljsjs.material-ui cljsjs.material-ui, reagent.core reagent.core, r reagent.core, cljsjs.material-ui-chip-input cljsjs.material-ui-chip-input, ic cljs-react-material-ui.icons, cljs-react-material-ui.reagent cljs-react-material-ui.reagent, todomvc.routes todomvc.routes, ui cljs-react-material-ui.reagent, cljs-react-material-ui.icons cljs-react-material-ui.icons, re-frame re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses {path-for-page todomvc.routes}, :defs {add-action-button {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/scenes/add-action.cljs", :line 11, :column 7, :end-line 11, :end-column 24, :arglists (quote ([]))}, :name todomvc.scenes.add-action/add-action-button, :variadic false, :file "src/cljs/todomvc/scenes/add-action.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-action-app-bar {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/scenes/add-action.cljs", :line 23, :column 7, :end-line 23, :end-column 25, :arglists (quote ([]))}, :name todomvc.scenes.add-action/add-action-app-bar, :variadic false, :file "src/cljs/todomvc/scenes/add-action.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, chip-input {:name todomvc.scenes.add-action/chip-input, :file "src/cljs/todomvc/scenes/add-action.cljs", :line 29, :column 1, :end-line 29, :end-column 16, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/scenes/add-action.cljs", :line 29, :column 6, :end-line 29, :end-column 16}, :tag any}, target-value {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/scenes/add-action.cljs", :line 31, :column 7, :end-line 31, :end-column 19, :arglists (quote ([tv]))}, :name todomvc.scenes.add-action/target-value, :variadic false, :file "src/cljs/todomvc/scenes/add-action.cljs", :end-column 19, :method-params ([tv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tv]))}, paper-props {:name todomvc.scenes.add-action/paper-props, :file "src/cljs/todomvc/scenes/add-action.cljs", :line 35, :column 1, :end-line 35, :end-column 17, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/scenes/add-action.cljs", :line 35, :column 6, :end-line 35, :end-column 17}, :tag cljs.core/IMap}, action-tags-input {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/scenes/add-action.cljs", :line 39, :column 7, :end-line 39, :end-column 24, :arglists (quote ([props]))}, :name todomvc.scenes.add-action/action-tags-input, :variadic false, :file "src/cljs/todomvc/scenes/add-action.cljs", :end-column 24, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props]))}, add-action-panel {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/scenes/add-action.cljs", :line 52, :column 7, :end-line 52, :end-column 23, :arglists (quote ([]))}, :name todomvc.scenes.add-action/add-action-panel, :variadic false, :file "src/cljs/todomvc/scenes/add-action.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {ic cljs-react-material-ui.icons, cljs-react-material-ui.icons cljs-react-material-ui.icons, r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:ui.add-action/add-tag :tags :openOnFocus :onRequestAdd :multi-line :ui.add-action/update-name :color :disabled :ui.add-action/remove-tag :font-size :overflow :value :margin-top :width :z-depth :matching-tags :ui.add-action/tags :ui.add-action/all-tags :fullWidth :ui.add-action/save-action :actions :on-click :on-add-chip :style :onRequestDelete :div :onUpdateInput :todomvc.navigation/right-element :ui.add-action/action-name :dataSource :todomvc.navigation/left-element :label :padding :floating-label-text :db/ident :on-input-update :ui.add-action/add-action :on-delete-chip :on-change :todomvc.navigation/title :ui.add-action/tag :href :hintText :margin}, :order [:ui.add-action/add-action :db/ident :label :on-click :href :disabled :style :ui.add-action/save-action :ui.add-action/action-name :ui.add-action/tags :actions :color :margin-top :todomvc.navigation/title :todomvc.navigation/left-element :todomvc.navigation/right-element :z-depth :margin :padding :tags :matching-tags :on-input-update :on-add-chip :on-delete-chip :openOnFocus :onRequestAdd :value :fullWidth :onRequestDelete :onUpdateInput :dataSource :hintText :ui.add-action/all-tags :div :overflow :floating-label-text :on-change :ui.add-action/update-name :font-size :multi-line :width :ui.add-action/tag :ui.add-action/add-tag :ui.add-action/remove-tag]}, :doc nil}