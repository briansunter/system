{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name todomvc.db, :imports nil, :requires {d datascript.core, datascript.core datascript.core, re-posh.core re-posh.core}, :cljs.spec/speced-vars [], :uses {connect! re-posh.core}, :defs {schema {:name todomvc.db/schema, :file "src/cljs/todomvc/db.cljs", :line 7, :column 1, :end-line 7, :end-column 12, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/db.cljs", :line 7, :column 6, :end-line 7, :end-column 12}, :tag cljs.core/IMap}, initial-db {:name todomvc.db/initial-db, :file "src/cljs/todomvc/db.cljs", :line 20, :column 1, :end-line 20, :end-column 16, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/db.cljs", :line 20, :column 6, :end-line 20, :end-column 16}, :tag cljs.core/IVector}, conn {:name todomvc.db/conn, :file "src/cljs/todomvc/db.cljs", :line 55, :column 1, :end-line 55, :end-column 14, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/db.cljs", :line 55, :column 10, :end-line 55, :end-column 14}, :tag any}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:find :fee :create-todo-form/title :db.unique/identity :tags/tag :type/tag :where :db/unique :nav/current-page :type/create-todo-form :bar :db/valueType :db.type/ref :action/tags :ui.add-action/tags :app/type :db/isComponent _ :nav/page :ui.add-action/action-name :action/name :foo :task/done? :db/cardinality :task/description ?n :db/id :db/ident :type/task :nav.page/home :ui.add-action/add-action :db.cardinality/many :create-todo-form/description ... :ui.add-action/tag}, :order [:db/ident :tags/tag :ui.add-action/tag :ui.add-action/tags :action/tags :db/unique :db.unique/identity :db/isComponent :db/valueType :db/cardinality :db.type/ref :db.cardinality/many :nav/page :nav/current-page :nav.page/home :ui.add-action/action-name :ui.add-action/add-action :foo :bar :fee :db/id :app/type :create-todo-form/title :create-todo-form/description :type/create-todo-form :action/name :task/description :task/done? :type/task :type/tag :find ?n ... :where _]}, :doc nil}