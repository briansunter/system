{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name todomvc.views, :imports nil, :requires {todomvc.navigation todomvc.navigation, nav todomvc.navigation, cljsjs.material-ui cljsjs.material-ui, todomvc.scenes.add-action todomvc.scenes.add-action, reagent.core reagent.core, r reagent.core, ic cljs-react-material-ui.icons, cljs-react-material-ui.reagent cljs-react-material-ui.reagent, todomvc.routes todomvc.routes, ui cljs-react-material-ui.reagent, cljs-react-material-ui.core cljs-react-material-ui.core, cljs-react-material-ui.icons cljs-react-material-ui.icons, re-frame re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses {get-mui-theme cljs-react-material-ui.core, color cljs-react-material-ui.core, theme todomvc.navigation, path-for-page todomvc.routes, add-action-panel todomvc.scenes.add-action}, :defs {task-list-item {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/views.cljs", :line 12, :column 7, :end-line 12, :end-column 21, :arglists (quote ([id]))}, :name todomvc.views/task-list-item, :variadic false, :file "src/cljs/todomvc/views.cljs", :end-column 21, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, task-list {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/views.cljs", :line 21, :column 7, :end-line 21, :end-column 16, :arglists (quote ([]))}, :name todomvc.views/task-list, :variadic false, :file "src/cljs/todomvc/views.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, actions-app-bar {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/views.cljs", :line 28, :column 7, :end-line 28, :end-column 22, :arglists (quote ([]))}, :name todomvc.views/actions-app-bar, :variadic false, :file "src/cljs/todomvc/views.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, home-page {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/views.cljs", :line 33, :column 7, :end-line 33, :end-column 16, :arglists (quote ([]))}, :name todomvc.views/home-page, :variadic false, :file "src/cljs/todomvc/views.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, panels {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/views.cljs", :line 49, :column 8, :end-line 49, :end-column 14, :private true, :arglists (quote ([panel-name]))}, :private true, :name todomvc.views/panels, :variadic false, :file "src/cljs/todomvc/views.cljs", :end-column 14, :method-params ([panel-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([panel-name]))}, main-panel {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/src/cljs/todomvc/views.cljs", :line 55, :column 7, :end-line 55, :end-column 17, :arglists (quote ([]))}, :name todomvc.views/main-panel, :variadic false, :file "src/cljs/todomvc/views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {ic cljs-react-material-ui.icons, cljs-react-material-ui.icons cljs-react-material-ui.icons, r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:task-ids :nav/current-page :key :add-action :bottom :task/set-status :task :secondary :type :actions :style :div :z-index :action/name :todomvc.navigation/left-element :task/done? :checked :db/id :right :position :class-name :input :margin-right :on-change :todomvc.navigation/title :margin-bottom :href :a :span :margin}, :order [:task :class-name :input :type :checked :on-change :task/done? :task/set-status :db/id :span :action/name :task-ids :key :todomvc.navigation/title :todomvc.navigation/left-element :href :actions :nav/current-page :div :style :margin :secondary :add-action :bottom :z-index :right :margin-right :margin-bottom :position :a]}, :doc nil}