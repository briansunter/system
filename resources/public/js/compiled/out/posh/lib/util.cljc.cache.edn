{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name posh.lib.util, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {exception {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/util.cljc", :line 3, :column 7, :end-line 3, :end-column 16, :arglists (quote ([msg]))}, :name posh.lib.util/exception, :variadic false, :file "resources/public/js/compiled/out/posh/lib/util.cljc", :end-column 16, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, t-for-datoms {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/util.cljc", :line 11, :column 7, :end-line 11, :end-column 19, :arglists (quote ([q-fn db datoms]))}, :name posh.lib.util/t-for-datoms, :variadic false, :file "resources/public/js/compiled/out/posh/lib/util.cljc", :end-column 19, :method-params ([q-fn db datoms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 3, :fn-var true, :arglists (quote ([q-fn db datoms]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:find ?a :where _ ?v $ ... ?t ?e :in}, :order [:find ?e ?a ?v ?t :in $ ... :where _]}, :doc nil}