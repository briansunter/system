{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name posh.lib.db, :imports nil, :requires {dm posh.lib.datom-matcher, posh.lib.datom-matcher posh.lib.datom-matcher}, :cljs.spec/speced-vars [], :uses nil, :defs {db-id->schema {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/db.cljc", :line 21, :column 7, :end-line 21, :end-column 20, :arglists (quote ([posh-tree db-id]))}, :name posh.lib.db/db-id->schema, :variadic false, :file "resources/public/js/compiled/out/posh/lib/db.cljc", :end-column 20, :method-params ([posh-tree db-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([posh-tree db-id]))}, get-parent-db {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/db.cljc", :line 4, :column 7, :end-line 4, :end-column 20, :arglists (quote ([poshdb]))}, :name posh.lib.db/get-parent-db, :variadic false, :file "resources/public/js/compiled/out/posh/lib/db.cljc", :end-column 20, :method-params ([poshdb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([poshdb]))}, poshdb->attrs {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/db.cljc", :line 38, :column 7, :end-line 38, :end-column 20, :arglists (quote ([posh-tree poshdb]))}, :name posh.lib.db/poshdb->attrs, :variadic false, :file "resources/public/js/compiled/out/posh/lib/db.cljc", :end-column 20, :method-params ([posh-tree poshdb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([posh-tree poshdb]))}, db-id->db {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/db.cljc", :line 24, :column 7, :end-line 24, :end-column 16, :arglists (quote ([posh-tree db-id]))}, :name posh.lib.db/db-id->db, :variadic false, :file "resources/public/js/compiled/out/posh/lib/db.cljc", :end-column 16, :method-params ([posh-tree db-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([posh-tree db-id]))}, db-id->conn {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/db.cljc", :line 18, :column 7, :end-line 18, :end-column 18, :arglists (quote ([posh-tree db-id]))}, :name posh.lib.db/db-id->conn, :variadic false, :file "resources/public/js/compiled/out/posh/lib/db.cljc", :end-column 18, :method-params ([posh-tree db-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([posh-tree db-id]))}, poshdb->db-id {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/db.cljc", :line 27, :column 7, :end-line 27, :end-column 20, :arglists (quote ([poshdb]))}, :name posh.lib.db/poshdb->db-id, :variadic false, :file "resources/public/js/compiled/out/posh/lib/db.cljc", :end-column 20, :method-params ([poshdb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([poshdb]))}, db-id->attrs {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/db.cljc", :line 32, :column 7, :end-line 32, :end-column 19, :arglists (quote ([posh-tree db-id]))}, :name posh.lib.db/db-id->attrs, :variadic false, :file "resources/public/js/compiled/out/posh/lib/db.cljc", :end-column 19, :method-params ([posh-tree db-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([posh-tree db-id]))}, poshdb->db {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/db.cljc", :line 62, :column 7, :end-line 62, :end-column 17, :arglists (quote ([{:keys [dcfg cache], :as posh-tree} poshdb]))}, :name posh.lib.db/poshdb->db, :variadic false, :file "resources/public/js/compiled/out/posh/lib/db.cljc", :end-column 17, :method-params ([p__30533 poshdb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [dcfg cache], :as posh-tree} poshdb]))}, get-db-path {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/db.cljc", :line 11, :column 7, :end-line 11, :end-column 18, :arglists (quote ([poshdb]))}, :name posh.lib.db/get-db-path, :variadic false, :file "resources/public/js/compiled/out/posh/lib/db.cljc", :end-column 18, :method-params ([poshdb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([poshdb]))}, generate-initial-db {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/db.cljc", :line 45, :column 7, :end-line 45, :end-column 26, :arglists (quote ([dcfg conn filters] [dcfg conn filters db])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([dcfg conn filters] [dcfg conn filters db]), :arglists ([dcfg conn filters] [dcfg conn filters db]), :arglists-meta (nil nil)}}, :name posh.lib.db/generate-initial-db, :variadic false, :file "resources/public/js/compiled/out/posh/lib/db.cljc", :end-column 26, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([dcfg conn filters] [dcfg conn filters db]), :arglists ([dcfg conn filters] [dcfg conn filters db]), :arglists-meta (nil nil)}, :method-params ([dcfg conn filters] [dcfg conn filters db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 4, :fn-var true, :arglists ([dcfg conn filters] [dcfg conn filters db])}, make-filter-pred {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/db.cljc", :line 41, :column 7, :end-line 41, :end-column 23, :arglists (quote ([tx-patterns]))}, :name posh.lib.db/make-filter-pred, :variadic false, :file "resources/public/js/compiled/out/posh/lib/db.cljc", :end-column 23, :method-params ([tx-patterns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tx-patterns]))}, poshdb->analyze-db {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/db.cljc", :line 70, :column 7, :end-line 70, :end-column 25, :arglists (quote ([posh-tree poshdb]))}, :name posh.lib.db/poshdb->analyze-db, :variadic false, :file "resources/public/js/compiled/out/posh/lib/db.cljc", :end-column 25, :method-params ([posh-tree poshdb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 2, :fn-var true, :arglists (quote ([posh-tree poshdb]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:schema :since :db-id :db-after :db :filter :as-of :cache :dbs :schemas :with :dcfg :conns :pass-patterns :conn}, :order [:conns :schemas :dbs :db :conn :schema :db-id :filter :as-of :since :with :db-after :dcfg :cache :pass-patterns]}, :doc nil}