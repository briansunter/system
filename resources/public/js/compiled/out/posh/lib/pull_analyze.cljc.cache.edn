{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name posh.lib.pull-analyze, :imports nil, :requires {util posh.lib.util, posh.lib.util posh.lib.util, dm posh.lib.datom-matcher, posh.lib.datom-matcher posh.lib.datom-matcher}, :cljs.spec/speced-vars [], :uses nil, :defs {tx-pattern-for-pull {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 131, :column 7, :end-line 131, :end-column 26, :arglists (quote ([schema pull-pattern affected-pull refs-only?]))}, :name posh.lib.pull-analyze/tx-pattern-for-pull, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 26, :method-params ([schema pull-pattern affected-pull refs-only?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 4, :fn-var true, :arglists (quote ([schema pull-pattern affected-pull refs-only?]))}, cardinality-one? {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 42, :column 7, :end-line 42, :end-column 23, :arglists (quote ([schema attr]))}, :name posh.lib.pull-analyze/cardinality-one?, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 23, :method-params ([schema attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([schema attr]))}, cardinality-many? {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 46, :column 7, :end-line 46, :end-column 24, :arglists (quote ([schema attr]))}, :name posh.lib.pull-analyze/cardinality-many?, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 24, :method-params ([schema attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([schema attr]))}, pull-affected-datoms {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 29, :column 7, :end-line 29, :end-column 27, :arglists (quote ([pull-fn db pull-pattern eid]))}, :name posh.lib.pull-analyze/pull-affected-datoms, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 27, :method-params ([pull-fn db pull-pattern eid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 4, :fn-var true, :arglists (quote ([pull-fn db pull-pattern eid]))}, insert-dbid {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 17, :column 7, :end-line 17, :end-column 18, :arglists (quote ([pull-pattern]))}, :name posh.lib.pull-analyze/insert-dbid, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 18, :method-params ([pull-pattern]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pull-pattern]))}, limit-spec? {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 118, :column 7, :end-line 118, :end-column 18, :arglists (quote ([x]))}, :name posh.lib.pull-analyze/limit-spec?, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, reverse-lookup? {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 5, :column 7, :end-line 5, :end-column 22, :arglists (quote ([attr]))}, :name posh.lib.pull-analyze/reverse-lookup?, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 22, :method-params ([attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([attr]))}, pull-many-analyze {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 205, :column 7, :end-line 205, :end-column 24, :arglists (quote ([dcfg retrieve {:keys [db schema db-id]} pull-pattern ent-ids]))}, :name posh.lib.pull-analyze/pull-many-analyze, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 24, :method-params ([dcfg retrieve p__34659 pull-pattern ent-ids]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 205, :end-line 205, :max-fixed-arity 5, :fn-var true, :arglists (quote ([dcfg retrieve {:keys [db schema db-id]} pull-pattern ent-ids]))}, dbid-into-vec {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 12, :column 7, :end-line 12, :end-column 20, :arglists (quote ([v]))}, :name posh.lib.pull-analyze/dbid-into-vec, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 20, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, generate-affected-tx-datoms-for-pull {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 88, :column 7, :end-line 88, :end-column 43, :arglists (quote ([schema affected-pull]))}, :name posh.lib.pull-analyze/generate-affected-tx-datoms-for-pull, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 43, :method-params ([schema affected-pull]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 2, :fn-var true, :arglists (quote ([schema affected-pull]))}, remove-limits {:name posh.lib.pull-analyze/remove-limits, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 124, :column 1, :end-line 124, :end-column 19, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 124, :column 6, :end-line 124, :end-column 19}, :tag any}, pull-analyze {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 166, :column 7, :end-line 166, :end-column 19, :arglists (quote ([dcfg retrieve {:keys [db db-id schema]} pull-pattern ent-id]))}, :name posh.lib.pull-analyze/pull-analyze, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 19, :method-params ([dcfg retrieve p__34653 pull-pattern ent-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 5, :fn-var true, :arglists (quote ([dcfg retrieve {:keys [db db-id schema]} pull-pattern ent-id]))}, reverse-lookup {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 8, :column 7, :end-line 8, :end-column 21, :arglists (quote ([attr]))}, :name posh.lib.pull-analyze/reverse-lookup, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 21, :method-params ([attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([attr]))}, recursive-val? {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 128, :column 7, :end-line 128, :end-column 21, :arglists (quote ([v]))}, :name posh.lib.pull-analyze/recursive-val?, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 21, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, pull-ref-many? {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 35, :column 7, :end-line 35, :end-column 21, :arglists (quote ([v]))}, :name posh.lib.pull-analyze/pull-ref-many?, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 21, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, limit-attr {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 121, :column 7, :end-line 121, :end-column 17, :arglists (quote ([limit-spec]))}, :name posh.lib.pull-analyze/limit-attr, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 17, :method-params ([limit-spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([limit-spec]))}, pull-ref-one? {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 32, :column 7, :end-line 32, :end-column 20, :arglists (quote ([v]))}, :name posh.lib.pull-analyze/pull-ref-one?, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 20, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, tx-datoms-for-pull-map {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 50, :column 7, :end-line 50, :end-column 29, :arglists (quote ([schema entity-id pull-map]))}, :name posh.lib.pull-analyze/tx-datoms-for-pull-map, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 29, :method-params ([schema entity-id pull-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 3, :fn-var true, :arglists (quote ([schema entity-id pull-map]))}, ref? {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :line 38, :column 7, :end-line 38, :end-column 11, :arglists (quote ([schema attr]))}, :name posh.lib.pull-analyze/ref?, :variadic false, :file "resources/public/js/compiled/out/posh/lib/pull_analyze.cljc", :end-column 11, :method-params ([schema attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([schema attr]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:q :schema :db-id :ref-patterns :else :db :db/valueType :patterns * :db.type/ref limit _ :datoms-t :db/cardinality :entid :db/id :db.cardinality/many :pull ... :datoms :results}, :order [* :db/id :else :db/valueType :db.type/ref :db/cardinality :db.cardinality/many limit ... _ :db :db-id :schema :pull :entid :results :datoms-t :datoms :q :ref-patterns :patterns]}, :doc nil}