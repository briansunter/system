{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name posh.stateful, :imports nil, :requires {p posh.core, posh.core posh.core, db posh.lib.db, posh.lib.db posh.lib.db, u posh.lib.update, posh.lib.update posh.lib.update}, :cljs.spec/speced-vars [], :uses nil, :defs {datoms {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 89, :column 7, :end-line 89, :end-column 13, :arglists (quote ([posh-query]))}, :name posh.stateful/datoms, :variadic false, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 13, :method-params ([posh-query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 1, :fn-var true, :arglists (quote ([posh-query]))}, pass-patterns {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 86, :column 7, :end-line 86, :end-column 20, :arglists (quote ([posh-query]))}, :name posh.stateful/pass-patterns, :variadic false, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 20, :method-params ([posh-query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists (quote ([posh-query]))}, rm {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 57, :column 7, :end-line 57, :end-column 9, :arglists (quote ([posh-item]))}, :name posh.stateful/rm, :variadic false, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 9, :method-params ([posh-item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([posh-item]))}, results {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 80, :column 7, :end-line 80, :end-column 14, :arglists (quote ([posh-query]))}, :name posh.stateful/results, :variadic false, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 14, :method-params ([posh-query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 1, :fn-var true, :arglists (quote ([posh-query]))}, add-db {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 15, :column 7, :end-line 15, :end-column 13, :arglists (quote ([posh-atom db-id conn schema opts]))}, :name posh.stateful/add-db, :variadic false, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 13, :method-params ([posh-atom db-id conn schema opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 5, :fn-var true, :arglists (quote ([posh-atom db-id conn schema opts]))}, add-filter-tx {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 37, :column 7, :end-line 37, :end-column 20, :arglists (quote ([poshdb tx-patterns]))}, :name posh.stateful/add-filter-tx, :variadic false, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 20, :method-params ([poshdb tx-patterns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([poshdb tx-patterns]))}, add-pull {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 22, :column 7, :end-line 22, :end-column 15, :arglists (quote ([poshdb pull-pattern eid]))}, :name posh.stateful/add-pull, :variadic false, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 15, :method-params ([poshdb pull-pattern eid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 3, :fn-var true, :arglists (quote ([poshdb pull-pattern eid]))}, add-filter-pull {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 43, :column 7, :end-line 43, :end-column 22, :arglists (quote ([poshdb pull-pattern eid]))}, :name posh.stateful/add-filter-pull, :variadic false, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 22, :method-params ([poshdb pull-pattern eid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 3, :fn-var true, :arglists (quote ([poshdb pull-pattern eid]))}, get-posh-atom {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 6, :column 7, :end-line 6, :end-column 20, :arglists (quote ([posh-item]))}, :name posh.stateful/get-posh-atom, :variadic false, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 20, :method-params ([posh-item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([posh-item]))}, poshdb->conn {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 9, :column 7, :end-line 9, :end-column 19, :arglists (quote ([poshdb]))}, :name posh.stateful/poshdb->conn, :variadic false, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 19, :method-params ([poshdb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([poshdb]))}, add-filter-q {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 49, :column 7, :end-line 49, :end-column 19, :arglists (quote ([query & args])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(query args)], :arglists ([query & args]), :arglists-meta (nil)}}, :name posh.stateful/add-filter-q, :variadic true, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(query args)], :arglists ([query & args]), :arglists-meta (nil)}, :method-params [(query args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists ([query & args])}, transact-all! {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 72, :column 7, :end-line 72, :end-column 20, :arglists (quote ([posh-atom]))}, :name posh.stateful/transact-all!, :variadic false, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 20, :method-params ([posh-atom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([posh-atom]))}, add-q {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 28, :column 7, :end-line 28, :end-column 12, :arglists (quote ([query & args])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(query args)], :arglists ([query & args]), :arglists-meta (nil)}}, :name posh.stateful/add-q, :variadic true, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(query args)], :arglists ([query & args]), :arglists-meta (nil)}, :method-params [(query args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists ([query & args])}, transact {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 66, :column 7, :end-line 66, :end-column 15, :arglists (quote ([posh-item tx]))}, :name posh.stateful/transact, :variadic false, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 15, :method-params ([posh-item tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([posh-item tx]))}, cache {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 77, :column 7, :end-line 77, :end-column 12, :arglists (quote ([posh-query]))}, :name posh.stateful/cache, :variadic false, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 12, :method-params ([posh-query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([posh-query]))}, datoms-t {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 92, :column 7, :end-line 92, :end-column 15, :arglists (quote ([posh-query]))}, :name posh.stateful/datoms-t, :variadic false, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 15, :method-params ([posh-query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([posh-query]))}, new-posh {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 12, :column 7, :end-line 12, :end-column 15, :arglists (quote ([dcfg retrieve]))}, :name posh.stateful/new-posh, :variadic false, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 15, :method-params ([dcfg retrieve]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dcfg retrieve]))}, reload-patterns {:protocol-inline nil, :meta {:file "/Users/bsunter/gdrive/code/clojurescript/re-posh/examples/todomvc/resources/public/js/compiled/out/posh/stateful.cljc", :line 83, :column 7, :end-line 83, :end-column 22, :arglists (quote ([posh-query]))}, :name posh.stateful/reload-patterns, :variadic false, :file "resources/public/js/compiled/out/posh/stateful.cljc", :end-column 22, :method-params ([posh-query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([posh-query]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:return :posh :cache :datoms-t :reload-patterns :datoms :pass-patterns :conn :results}, :order [:posh :conn :return :cache :results :reload-patterns :pass-patterns :datoms :datoms-t]}, :doc nil}